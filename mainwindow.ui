<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1396</width>
    <height>662</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
	background-color:rgb(82, 82, 82);
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QFrame" name="frame_2">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>60</y>
      <width>1231</width>
      <height>601</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QFrame {
    background-color: #3d3d3d;  /* Dark background */
    border-style: solid;
    border-width: 2px;  /* Border thickness */
    border-color: #00ff00;  /* Orange border */
    border-radius: 7px;  /* Rounded corners */
    padding: 5px;  /* Internal padding */
}

/* Optional: Hover effect for QFrame */
QFrame:hover {
    border-color: #2d89ef;  /* Blue border on hover */
}</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QTableView" name="tableView">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>60</y>
       <width>1011</width>
       <height>431</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QTableView Styling */
QTableView {
    background-color: #f8f8f8;  /* Light gray background for table */
    color: #333333;  /* Dark gray text for readability */
    border: 1px solid #cccccc;  /* Soft gray border */
    border-radius: 6px;  /* Rounded corners */
    gridline-color: #dddddd;  /* Light gray gridlines */
    selection-background-color: #007acc;  /* Deep blue background for selection */
    selection-color: #ffffff;  /* White text when selected */
    alternate-background-color: #f1f1f1;  /* Slightly lighter alternate row background */
    padding: 6px;  /* Light padding */
}

/* Horizontal Header Styling */
QHeaderView::section {
    background-color: #e0e0e0;  /* Light gray background for headers */
    color: #333333;  /* Dark gray header text */
    border: 1px solid #cccccc;  /* Soft border for separation */
    padding: 8px;  /* Comfortable padding for header cells */
    font-weight: 600;  /* Semi-bold text */
    font-size: 13px;  /* Slightly larger text for headers */
    text-align: center;  /* Center-align header text */
}

/* Vertical Header (Row Number) Styling */
QHeaderView::section:vertical {
    background-color: #e0e0e0;  /* Consistent header color for row numbers */
    color: #333333;  /* Dark gray row number text */
    border: 1px solid #cccccc;  /* Border for separation */
    padding: 6px;  /* Padding to match the table headers */
    font-weight: 500;  /* Slightly less bold for row numbers */
    font-size: 12px;  /* Match size with main content */
    min-width: 50px;  /* Increased width for readability */
}

/* Hover effect for Header */
QHeaderView::section:hover {
    background-color: #d1d1d1;  /* Subtle darker gray on hover */
    color: #333333;  /* Keep header text dark */
}

/* Row Styling */
QTableView::item {
    background-color: #ffffff;  /* White background for rows */
    color: #333333;  /* Dark gray text for readability */
    padding: 6px;  /* Spacing around row content */
    font-size: 12px;  /* Standard font size for rows */
}

/* Alternate Rows */
QTableView::item:alternate {
    background-color: #f9f9f9;  /* Light alternate background */
}

/* Hover effect for Rows */
QTableView::item:hover {
    background-color: #e6f7ff;  /* Light blue on hover */
    color: #333333;  /* Keep text dark */
    border: 1px solid #007acc;  /* Blue border on hover */
}

/* Selected Row Styling */
QTableView::item:selected {
    background-color: #007acc;  /* Deep blue for selected rows */
    color: #ffffff;  /* White text for selected rows */
    border: 1px solid #005b99;  /* Slightly darker blue border for focus */
    padding: 6px;  /* Maintain padding to avoid text clipping */
}
</string>
     </property>
    </widget>
    <widget class="QPushButton" name="editButton">
     <property name="geometry">
      <rect>
       <x>220</x>
       <y>510</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Add Button */
#addButton {
    background-color: #3498DB;        /* Light blue background */
    color: white;                     
    font-size: 14px;                  
    border-radius: 10px;              
    padding: 5px 15px;                
    min-width: 80px;                  
    min-height: 30px;                 
    border: 2px solid #2980B9;        
}

#addButton:hover {
    background-color: #5DADE2;        /* Lighter blue on hover */
    border: 2px solid #2874A6;        
}

#addButton:pressed {
    background-color: #2980B9;        
    border: 2px solid #1F618D;        
    padding: 4px 13px;                
}

/* Edit Button */
#editButton {
    background-color: #E67E22;        /* Orange background */
    color: white;                     
    font-size: 14px;                  
    border-radius: 10px;              
    padding: 5px 15px;                
    min-width: 80px;                  
    min-height: 30px;                 
    border: 2px solid #CA6F1E;        
}

#editButton:hover {
    background-color: #F0B27A;        /* Lighter orange on hover */
    border: 2px solid #B9770E;        
}

#editButton:pressed {
    background-color: #CA6F1E;        
    border: 2px solid #A04000;        
    padding: 4px 13px;                
}</string>
     </property>
     <property name="text">
      <string>Edit</string>
     </property>
    </widget>
    <widget class="QPushButton" name="removeButton">
     <property name="geometry">
      <rect>
       <x>350</x>
       <y>510</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>114</width>
       <height>44</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Remove Button */
#removeButton {
    background-color: #E74C3C;        /* Red background */
    color: white;                     
    font-size: 14px;                  
    border-radius: 10px;              
    padding: 5px 15px;                
    min-width: 80px;                  
    min-height: 30px;                 
    border: 2px solid #C0392B;        
}

#removeButton:hover {
    background-color: #EC7063;        /* Lighter red on hover */
    border: 2px solid #922B21;        
}

#removeButton:pressed {
    background-color: #C0392B;        
    border: 2px solid #641E16;        
    padding: 4px 13px;                
}</string>
     </property>
     <property name="text">
      <string>Remove</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/delete.png</normaloff>:/icons/img/delete.png</iconset>
     </property>
    </widget>
    <widget class="QPushButton" name="addButton">
     <property name="geometry">
      <rect>
       <x>90</x>
       <y>510</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>114</width>
       <height>44</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #4CAF50;        /* Light blue background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Reduced padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #2980B9;        /* Darker blue border */
}

QPushButton:hover {
    background-color: #5DADE2;        /* Lighter blue on hover */
    border: 2px solid #2874A6;        /* Darker blue border on hover */
}

QPushButton:pressed {
    background-color: #2980B9;        /* Darker blue when clicked */
    border: 2px solid #1F618D;        /* Even darker blue border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}
</string>
     </property>
     <property name="text">
      <string>Add</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/add.png</normaloff>:/icons/img/add.png</iconset>
     </property>
    </widget>
    <widget class="QPushButton" name="generatePdfButton">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>550</y>
       <width>40</width>
       <height>40</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>40</width>
       <height>40</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>40</width>
       <height>40</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/printer.png</normaloff>:/icons/img/printer.png</iconset>
     </property>
     <property name="iconSize">
      <size>
       <width>25</width>
       <height>25</height>
      </size>
     </property>
    </widget>
    <widget class="QComboBox" name="comboBox">
     <property name="geometry">
      <rect>
       <x>1110</x>
       <y>470</y>
       <width>111</width>
       <height>50</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QComboBox Styling */
QComboBox {
    background-color: #3d3d3d;  /* Dark background */
    color: #ffffff;  /* White text */
    font-size: 14px;  /* Increase font size */
    font-weight: bold;  /* Bold text */
    border-radius: 7px;  /* Rounded corners */
    border: 2px solid #00ff00;  /* Green border */
    padding: 8px 15px;  /* Padding for spacing */
    outline: none;  /* Remove default focus outline */
    min-height: 30px; /* Ensures enough height */
}

/* Drop-down arrow styling */
QComboBox::drop-down {
    border: none;  /* Remove border around arrow */
    background: transparent;  /* Transparent background */
}

QComboBox::down-arrow {
    image: url(/path/to/your/arrow-icon.png); /* Custom arrow icon */
    width: 12px;  /* Adjust size as needed */
    height: 12px;
}

/* List view (drop-down) */
QComboBox QAbstractItemView {
    background-color: #3d3d3d;  /* Dark background for list */
    color: #ffffff;  /* White text in list */
    border: 2px solid #00ff00;  /* Green border */
    selection-background-color: #2d89ef;  /* Blue background for selected item */
    selection-color: #ffffff;  /* White text for selected item */
    border-radius: 7px;  /* Rounded corners */
}

/* Hover effect */
QComboBox:hover {
    color: #e0e0e0;  /* Slightly brighter text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Checked effect */
QComboBox:pressed, QComboBox:on {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Orange border when pressed */
}

/* Disabled ComboBox */
QComboBox:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border for disabled */
}
</string>
     </property>
     <item>
      <property name="text">
       <string>Nom</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Prenom</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Telephone</string>
      </property>
     </item>
    </widget>
    <widget class="QPushButton" name="sortButton">
     <property name="geometry">
      <rect>
       <x>1140</x>
       <y>520</y>
       <width>51</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #ffffff;  /* White text */
    font-size: 11px;  /* Increase font size */
    font-weight: bold;  /* Make text bold */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Green border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #e0e0e0;  /* Slightly brighter text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>OK</string>
     </property>
    </widget>
    <widget class="QPushButton" name="restorebutton">
     <property name="geometry">
      <rect>
       <x>840</x>
       <y>500</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #2196F3;        /* Bright blue background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #1976D2;        /* Darker blue border */
}

QPushButton:hover {
    background-color: #64B5F6;        /* Lighter blue on hover */
    border: 2px solid #1565C0;        /* Darker blue border on hover */
}

QPushButton:pressed {
    background-color: #1976D2;        /* Darker blue when clicked */
    border: 2px solid #0D47A1;        /* Even darker blue border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}</string>
     </property>
     <property name="text">
      <string>Restore</string>
     </property>
    </widget>
    <widget class="QPushButton" name="backupbutton">
     <property name="geometry">
      <rect>
       <x>960</x>
       <y>500</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #2196F3;        /* Bright blue background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #1976D2;        /* Darker blue border */
}

QPushButton:hover {
    background-color: #64B5F6;        /* Lighter blue on hover */
    border: 2px solid #1565C0;        /* Darker blue border on hover */
}

QPushButton:pressed {
    background-color: #1976D2;        /* Darker blue when clicked */
    border: 2px solid #0D47A1;        /* Even darker blue border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}</string>
     </property>
     <property name="text">
      <string>Backup</string>
     </property>
    </widget>
    <widget class="QPushButton" name="statisbutton">
     <property name="geometry">
      <rect>
       <x>1100</x>
       <y>10</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #9370DB;        /* Orange background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #F57C00;        /* Darker orange border */
}

QPushButton:hover {
    background-color: #FFB74D;        /* Lighter orange on hover */
    border: 2px solid #EF6C00;        /* Darker orange border on hover */
}

QPushButton:pressed {
    background-color: #F57C00;        /* Darker orange when clicked */
    border: 2px solid #E65100;        /* Even darker orange border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}</string>
     </property>
     <property name="text">
      <string>Statistique</string>
     </property>
    </widget>
    <widget class="QPushButton" name="rechercheButton">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>10</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #2196F3;        /* Bright blue background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #1976D2;        /* Darker blue border */
}

QPushButton:hover {
    background-color: #64B5F6;        /* Lighter blue on hover */
    border: 2px solid #1565C0;        /* Darker blue border on hover */
}

QPushButton:pressed {
    background-color: #1976D2;        /* Darker blue when clicked */
    border: 2px solid #0D47A1;        /* Even darker blue border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}</string>
     </property>
     <property name="text">
      <string>Recherche</string>
     </property>
    </widget>
    <widget class="QLineEdit" name="lineEdit_recherche">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>17</y>
       <width>271</width>
       <height>31</height>
      </rect>
     </property>
    </widget>
    <widget class="QPushButton" name="loadbutton">
     <property name="geometry">
      <rect>
       <x>420</x>
       <y>10</y>
       <width>114</width>
       <height>44</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #FF00FF;        /* Orange background */
    color: white;                     /* White text */
    font-size: 14px;                  /* Font size */
    border-radius: 10px;              /* Rounded corners */
    padding: 5px 15px;                /* Padding */
    min-width: 80px;                  /* Minimum width to fit text comfortably */
    min-height: 30px;                 /* Minimum height to fit text comfortably */
    border: 2px solid #F57C00;        /* Darker orange border */
}

QPushButton:hover {
    background-color: #FFB74D;        /* Lighter orange on hover */
    border: 2px solid #EF6C00;        /* Darker orange border on hover */
}

QPushButton:pressed {
    background-color: #F57C00;        /* Darker orange when clicked */
    border: 2px solid #E65100;        /* Even darker orange border when clicked */
    padding: 4px 13px;                /* Slightly reduce padding to simulate button press */
}</string>
     </property>
     <property name="text">
      <string>Load Data</string>
     </property>
    </widget>
    <widget class="QPushButton" name="verifyButton">
     <property name="geometry">
      <rect>
       <x>1030</x>
       <y>100</y>
       <width>83</width>
       <height>29</height>
      </rect>
     </property>
     <property name="text">
      <string>Get Verified</string>
     </property>
    </widget>
    <widget class="QLabel" name="codeDisplayLabel">
     <property name="geometry">
      <rect>
       <x>370</x>
       <y>140</y>
       <width>861</width>
       <height>101</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(255, 255, 255);
font: 700 11pt &quot;Segoe UI&quot;;</string>
     </property>
     <property name="text">
      <string>veryfing process</string>
     </property>
    </widget>
    <widget class="QLabel" name="statusLabel">
     <property name="geometry">
      <rect>
       <x>1050</x>
       <y>260</y>
       <width>161</width>
       <height>41</height>
      </rect>
     </property>
     <property name="text">
      <string>statut</string>
     </property>
    </widget>
    <widget class="QLineEdit" name="codeInputField">
     <property name="geometry">
      <rect>
       <x>1120</x>
       <y>100</y>
       <width>101</width>
       <height>28</height>
      </rect>
     </property>
    </widget>
    <widget class="QPushButton" name="imageButton">
     <property name="geometry">
      <rect>
       <x>1110</x>
       <y>430</y>
       <width>111</width>
       <height>29</height>
      </rect>
     </property>
     <property name="text">
      <string>Upload Image</string>
     </property>
    </widget>
   </widget>
   <widget class="QTreeWidget" name="treeWidget">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>1231</width>
      <height>61</height>
     </rect>
    </property>
    <column>
     <property name="text">
      <string>1</string>
     </property>
    </column>
   </widget>
   <widget class="QPushButton" name="title_music_pushButton_2">
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Service</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="checked">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="title_listenBook_pushButton">
    <property name="geometry">
     <rect>
      <x>220</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Commande</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="title_live_pushButton_2">
    <property name="geometry">
     <rect>
      <x>430</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Employees</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="title_live_pushButton_4">
    <property name="geometry">
     <rect>
      <x>640</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Transaction</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="title_live_pushButton_3">
    <property name="geometry">
     <rect>
      <x>850</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Sponsor</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="title_found_pushButton">
    <property name="geometry">
     <rect>
      <x>1050</x>
      <y>10</y>
      <width>138</width>
      <height>40</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>50</width>
      <height>30</height>
     </size>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
    </property>
    <property name="text">
     <string>Sales</string>
    </property>
    <property name="checkable">
     <bool>true</bool>
    </property>
    <property name="autoExclusive">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QLabel" name="imageLabel">
    <property name="geometry">
     <rect>
      <x>1280</x>
      <y>0</y>
      <width>111</width>
      <height>121</height>
     </rect>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1396</width>
     <height>25</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources>
  <include location="Resources/img.qrc"/>
 </resources>
 <connections/>
</ui>
